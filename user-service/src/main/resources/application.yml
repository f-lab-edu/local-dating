spring:
  application:
    name: user-service

  datasource:
    url: jdbc:mysql://aws-server:3306/local_dating
    #url: jdbc:mysql://localhost:3306/local_dating
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true

  data:
    redis:
      host: aws-server
      port: 6379

  kafka:
    bootstrap-servers: aws-server:19091, aws-server:19092, aws-server:19093
    #bootstrap-servers: aws-server
    #bootstrap-servers: msk 1 2 3
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #properties:
      #security.protocol: SASL_SSL
      #sasl.mechanism: AWS_MSK_IAM
      #sasl.jaas.config: software.amazon.msk.auth.iam.IAMLoginModule required;
      #sasl.client.callback.handler.class: software.amazon.msk.auth.iam.IAMClientCallbackHandler

#  kafka:
#    bootstrap-servers: aws-server:9091,aws-server:9092,aws-server:9093
#    #bootstrap-servers: aws-server:9091,aws-server:9092,aws-server:9093
#    #bootstrap-servers: kafka1:9091,kafka2:9092,kafka3:9093
#    consumer:
#      group-id: my-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer  # JSON 역직렬화
#      #value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer  # JSON 직렬화
#      #value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    #org.springframework.web: DEBUG
    #guru.springframework.controllers: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.data.redis: DEBUG
    #org.hibernate: DEBUG
    #org: INFO
    org.hibernate.orm.jdbc.bind: trace

cache:
  ttl:
    refreshToken: 30
    product: 600